// ----------------------------------------------------------------------------
//
// Copyright (c) 2019 - 2021 by the OpFlow developers
//
// This file is part of OpFlow.
// 
// OpFlow is free software and is distributed under the MPL v2.0 license. 
// The full text of the license can be found in the file LICENSE at the top
// level directory of OpFlow.
//
// ----------------------------------------------------------------------------

// Macros, Metas & Patterns
#include "Core/Macros.hpp"
#include "Core/Meta.hpp"

// Basic datatype
#include "Core/BasicDataTypes.hpp"

// Interfaces
#include "Core/Interfaces/Stringifiable.hpp"
#include "Core/Interfaces/Serializable.hpp"

// Mesh
#include "Core/Mesh/MeshBase.hpp"
#include "Core/Mesh/MeshTrait.hpp"
#include "Core/Mesh/SemiStructured/CartesianAMRMesh.hpp"
#include "Core/Mesh/SemiStructured/CartesianAMRMeshBase.hpp"
#include "Core/Mesh/SemiStructured/CartesianAMRMeshTrait.hpp"
#include "Core/Mesh/SemiStructured/CartesianAMRMeshView.hpp"
#include "Core/Mesh/SemiStructured/CartesianAMRMeshViewTrait.hpp"
#include "Core/Mesh/SemiStructured/SemiStructuredMesh.hpp"
#include "Core/Mesh/SemiStructured/SemiStructuredMeshTrait.hpp"
#include "Core/Mesh/Structured/CartesianMesh.hpp"
#include "Core/Mesh/Structured/CartesianMeshBase.hpp"
#include "Core/Mesh/Structured/CartesianMeshTrait.hpp"
#include "Core/Mesh/Structured/CartesianMeshView.hpp"
#include "Core/Mesh/Structured/CartesianMeshViewTrait.hpp"
#include "Core/Mesh/Structured/StructuredMeshBase.hpp"
#include "Core/Mesh/Structured/StructuredMeshTrait.hpp"

// Expr
#include "Core/Expr/Expr.hpp"
#include "Core/Expr/ExprTrait.hpp"
#include "Core/Expr/Expression.hpp"
#include "Core/Expr/ScalarExpr.hpp"
#include "Core/Expr/ScalarExprTrait.hpp"

// Field
#include "Core/Field/Analytical/AnalyticalFieldExpr.hpp"
#include "Core/Field/FieldExpr.hpp"
#include "Core/Field/FieldExprTrait.hpp"
#include "Core/Field/FieldMacros.hpp"
#include "Core/Field/MeshBased/MeshBasedFieldExpr.hpp"
#include "Core/Field/MeshBased/MeshBasedFieldExprTrait.hpp"
#include "Core/Field/MeshBased/SemiStructured/CartAMRField.hpp"
#include "Core/Field/MeshBased/SemiStructured/CartAMRFieldExpr.hpp"
#include "Core/Field/MeshBased/SemiStructured/CartAMRFieldExprTrait.hpp"
#include "Core/Field/MeshBased/SemiStructured/CartAMRFieldTrait.hpp"
#include "Core/Field/MeshBased/SemiStructured/SemiStructuredFieldExpr.hpp"
#include "Core/Field/MeshBased/SemiStructured/SemiStructuredFieldExprTrait.hpp"
#include "Core/Field/MeshBased/StencilField.hpp"
#include "Core/Field/MeshBased/StencilFieldTrait.hpp"
#include "Core/Field/MeshBased/Structured/CartesianField.hpp"
#include "Core/Field/MeshBased/Structured/CartesianFieldExprTrait.hpp"
#include "Core/Field/MeshBased/Structured/CartesianFieldTrait.hpp"
#include "Core/Field/MeshBased/Structured/StructuredFieldExpr.hpp"
#include "Core/Field/MeshBased/Structured/StructuredFieldExprTrait.hpp"
#include "Core/Field/MeshBased/UnStructured/UnStructMBFieldExpr.hpp"
#include "Core/Field/ParticleBased/ParticleFieldExpr.hpp"

// Operator
#include "Core/Operator/Arithmetic/AMDS.hpp"
#include "Core/Operator/Arithmetic/MinMax.hpp"
#include "Core/Operator/Conditional.hpp"
#include "Core/Operator/PerElemOpAdaptor.hpp"
#include "Core/Operator/FDMOperators/DiffsInterface.hpp"
#include "Core/Operator/FDMOperators/D1FirstOrderBiasedDownwind.hpp"
#include "Core/Operator/FDMOperators/D1FirstOrderBiasedUpwind.hpp"
#include "Core/Operator/FDMOperators/D1FirstOrderCentered.hpp"
#include "Core/Operator/FDMOperators/D1WENO53Upwind.hpp"
#include "Core/Operator/FDMOperators/D1WENO53Downwind.hpp"
#include "Core/Operator/FDMOperators/D2SecondOrderCentered.hpp"
#include "Core/Operator/Interpolator/IntpInterface.hpp"
#include "Core/Operator/Interpolator/D1Linear.hpp"
#include "Core/Operator/Interpolator/D1FluxLimiter.hpp"
#include "Core/Operator/Interpolator/FluxLimiterKernels.hpp"
#include "Core/Operator/Interpolator/D1FluxLimiterBasedIntpOp.hpp"
#include "Core/Operator/Logical/Boolean.hpp"
#include "Core/Operator/Logical/Compare.hpp"
#include "Core/Operator/Logical/Classify.hpp"
#include "Core/Operator/Operator.hpp"
#include "Core/Operator/IdentityOp.hpp"
#include "Core/Operator/Convolution/Convolution.hpp"

// BC
#include "Core/BC/BCBase.hpp"
#include "Core/BC/DircBC.hpp"
#include "Core/BC/LogicalBC.hpp"
#include "Core/BC/NeumBC.hpp"
#include "Core/BC/ProxyBC.hpp"

// Equation
#include "Core/Equation/HYPREEqnSolveHandler.hpp"
#include "Core/Equation/AMGCLEqnSolveHandler.hpp"
#include "Core/Equation/Equation.hpp"
#include "Core/Equation/EquationHolder.hpp"
#include "Core/Equation/StencilHolder.hpp"
#include "Core/Equation/CSRMatrixGenerator.hpp"
#include "Core/Equation/EqnSolveHandler.hpp"
#include "Core/Equation/UnifiedSolve.hpp"
#include "Core/Equation/AMGCLBackend.hpp"

// Solvers
#include "Core/Solvers/Struct/StructSolver.hpp"
#include "Core/Solvers/Struct/StructSolverBiCGSTAB.hpp"
#include "Core/Solvers/Struct/StructSolverCycRed.hpp"
#include "Core/Solvers/Struct/StructSolverFGMRES.hpp"
#include "Core/Solvers/Struct/StructSolverGMRES.hpp"
#include "Core/Solvers/Struct/StructSolverJacobi.hpp"
#include "Core/Solvers/Struct/StructSolverLGMRES.hpp"
#include "Core/Solvers/Struct/StructSolverNone.hpp"
#include "Core/Solvers/Struct/StructSolverPCG.hpp"
#include "Core/Solvers/Struct/StructSolverPFMG.hpp"
#include "Core/Solvers/Struct/StructSolverPrecond.hpp"
#include "Core/Solvers/Struct/StructSolverSMG.hpp"
#include "Core/Solvers/SemiStruct/SemiStructSolver.hpp"
#include "Core/Solvers/SemiStruct/SemiStructSolverFAC.hpp"
#include "Core/Solvers/SemiStruct/SemiStructSolverNone.hpp"

// Parallel
#include "Core/Parallel/ParallelPlan.hpp"
#include "Core/Parallel/ParallelType.hpp"
#include "Core/Parallel/ParallelInfo.hpp"
#include "Core/Parallel/AbstractSplitStrategy.hpp"
#include "Core/Parallel/EvenSplitStrategy.hpp"
#include "Core/Parallel/ParticleGuidedSplitStrategy.hpp"
#include "Core/Parallel/ManualSplitStrategy.hpp"

// Others
#include "Core/Loops/RangeFor.hpp"
#include "Core/Loops/StructFor.hpp"
#include "Core/Loops/StructReduce.hpp"
#include "Core/Environment.hpp"