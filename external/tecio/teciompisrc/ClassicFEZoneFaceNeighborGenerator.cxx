#include "ClassicFEZoneFaceNeighborGenerator.h"
#include "AltTecUtil.h"
#include "CodeContract.h"
namespace tecplot { namespace ___3933 { namespace { int32_t cellCountForZone(___37& ___36, ___4636 zone) { REQUIRE(zone >= 0); ___1844 ___1843; ___36.___4615(zone + 1, ___1843); return static_cast<int32_t>(___1843.___2105()); } int32_t faceCountForZone(___37& ___36, ___4636 zone) { REQUIRE(zone >= 0); ___1844 ___1843; ___36.___4615(zone + 1, ___1843); return static_cast<int32_t>(___1843.___2134()); } } ClassicFEZoneFaceNeighborGenerator::ClassicFEZoneFaceNeighborGenerator(class ___37& ___36) : FaceNeighborGeneratorAbstract(___36) {} ___372 ClassicFEZoneFaceNeighborGenerator::gatherUserFaceNeighbors(std::vector<int32_t>& userFaceNeighbors, ___4636 zone) const { REQUIRE(userFaceNeighbors.empty()); ___3501 ___1153 = 0; ___372 ___2039 = ___2337.___4614(&___1153); if (___2039) { ___1292 ___1274 = ___2337.___839(zone + 1); int32_t cellCount = cellCountForZone(___2337, zone); int32_t faceCount = faceCountForZone(___2337, zone); for(int32_t ___449 = 1; ___449 <= cellCount; ++___449) { for(int32_t face = 1; face <= faceCount; ++face) appendUserFaceNeighborsForCellFace(userFaceNeighbors, ___1274, ___1153, zone, ___449, face); } } ___2337.___3484(&___1153); return ___2039; } }}
